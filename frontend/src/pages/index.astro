---
import { getCollection } from 'astro:content';
import Base from '../layouts/Base.astro';
import Bubbles from '../components/Bubbles.astro';
import siteConfig from '../data/site.json';

const allProjects = await getCollection('projects');
const featuredProjects = allProjects
  .filter((project) => project.data.featured)
  .sort((a, b) => b.data.date.getTime() - a.data.date.getTime());

const primaryProjects = featuredProjects.slice(0, 3);
const heroHighlight = primaryProjects[0] ?? featuredProjects[0];
const researchHighlight = featuredProjects.find((project) => project.data.category.includes('研究')) ?? heroHighlight;

const basePath = (import.meta.env.BASE_URL ?? '/').replace(/\/$/, '');
const joinBase = (path: string) => {
  const normalized = path.startsWith('/') ? path : '/' + path;
  return basePath ? basePath + normalized : normalized;
};

const projectsHref = joinBase('/projects');
const timelineHref = joinBase('/timeline');
const resumeHref = joinBase('/resume');
const contactHref = '#contact';

const heroBadges = [
  'Serverless',
  'Data Platform',
  'TypeScript',
  'Astro',
  'AWS',
  'Line Bot',
  'Analytics',
  'Research',
];

const heroMetrics = [
  { value: '9店舗運用', label: 'Komeda Portal', description: '飲食チェーンの運用に採用' },
  { value: '▲23%', label: 'シフト作成時間', description: '自動化で大幅短縮' },
  { value: '0', label: 'ゼロダウンデプロイ', description: '可観測性と監視で継続運用' },
];

const heroActions = [
  { label: 'Resume', href: resumeHref, variant: 'primary', dataKey: 'index.hero.cta.resume' },
  { label: 'GitHub', href: siteConfig.socials.github.url, variant: 'ghost', external: true, dataKey: 'index.hero.cta.github' },
  { label: 'Contact', href: contactHref, variant: 'ghost', dataKey: 'index.hero.cta.contact' },
];

const projectSpotlights: Record<string, {
  tagline: string;
  metrics: { value: string; label: string }[];
  outcomes: string[];
  mediaLabel: string;
}> = {
  'komeda-portal': {
    tagline: 'Serverless DX for franchise operations',
    metrics: [
      { value: '▲23%', label: '工数削減' },
      { value: '9店舗', label: '同時運用' },
      { value: '24h', label: '自動通知' },
    ],
    outcomes: ['AWS Lambda × LINE API', 'Secrets Manager / S3 設計', 'ゼロダウン運用フロー'],
    mediaLabel: 'Shift dashboard automations',
  },
  'lab-memo-app': {
    tagline: 'Realtime knowledge base for labs',
    metrics: [
      { value: 'リアルタイム', label: 'Collaborative' },
      { value: '100%', label: 'Auth coverage' },
      { value: '5+', label: 'ロール管理' },
    ],
    outcomes: ['Next.js 14 + Firebase', 'RBAC & Security Rules', 'UX検証で定着率向上'],
    mediaLabel: 'Realtime collaboration surface',
  },
  'walking-data-research': {
    tagline: 'Gait analytics with time-series ML',
    metrics: [
      { value: '500+', label: 'サンプル' },
      { value: 'DTW', label: '距離計算' },
      { value: '90%', label: '再現性' },
    ],
    outcomes: ['Feature engineering pipeline', 'クラスタリング比較検証', 'Academic presentation ready'],
    mediaLabel: 'Clustering visualisations',
  },
};

const heroSpotlight = heroHighlight ? (projectSpotlights[heroHighlight.slug] ?? projectSpotlights['komeda-portal']) : undefined;
const researchSpotlight = researchHighlight ? (projectSpotlights[researchHighlight.slug] ?? heroSpotlight ?? projectSpotlights['komeda-portal']) : heroSpotlight;

const timelinePreview = [
  {
    period: '2024.03 - 2024.08',
    title: 'Komeda Portal - バイトシフトDX',
    summary: '店舗横断で運用されるサーバーレス基盤を構築し、通知と承認を自動化。',
    tags: ['AWS Lambda', 'LINE API'],
  },
  {
    period: '2024.06 - Now',
    title: '歩行データ時系列クラスタリング研究',
    summary: 'MediaPipe × DTWで歩行パターンを解析し、クラスタリング手法を比較検証。',
    tags: ['Python', 'Research'],
  },
  {
    period: '2023.10 - 2024.02',
    title: '研究室メモ共有アプリ',
    summary: 'Next.js + Firebaseでリアルタイムな知識共有基盤を構築。',
    tags: ['Next.js', 'Firebase'],
  },
];

const skillColumns = [
  {
    title: 'Daily Stack',
    items: ['Python / FastAPI', 'TypeScript / Astro', 'AWS Lambda', 'GitHub Actions'],
  },
  {
    title: 'Weekly Collaboration',
    items: ['データモデリング', 'アーキテクチャレビュー', 'ダッシュボード改善', 'ユーザーヒアリング'],
  },
  {
    title: 'Currently Learning',
    items: ['Rust for serverless', 'Edge inference', 'Data contracts', 'Observability patterns'],
  },
];

const contactLinks = [
  { label: 'Mail', href: 'mailto:' + siteConfig.contact.email },
  { label: 'X', href: siteConfig.socials.x.url },
  { label: 'LinkedIn', href: 'https://www.linkedin.com/in/kanato-murayama' },
  { label: 'Qiita', href: siteConfig.socials.qiita.url },
];
---

<Base title="ホーム" description={siteConfig.description}>
  <!-- Hero -------------------------------------------------- -->
  <section id="home" class="hero section" style="position: relative;">
    <!-- 泡エフェクトをHeroセクション内に表示 -->
    <Bubbles count={22} />
    <div class="layout-container">
      <div class="hero__grid">
        <div class="hero__content">
          <p class="hero__eyebrow reveal" data-i18n="index.hero.eyebrow">Serverless × Data / 実装から運用まで</p>
          <h1 class="hero__title reveal" data-i18n="index.hero.title">現場に届く“運用される”プロダクトを作る</h1>
          <p class="hero__lead reveal" data-i18n="index.hero.subtitle">Serverless × Data を軸に、業務現場と研究の双方で成果を出す実装・改善サイクルを回しています。</p>

          <div class="hero__metrics reveal">
            {heroMetrics.map((metric) => (
              <div class="hero__metric" role="presentation">
                <span class="hero__metric-value">{metric.value}</span>
                <span class="hero__metric-label">{metric.label}</span>
                <span class="hero__metric-detail">{metric.description}</span>
              </div>
            ))}
          </div>

          <div class="hero__actions reveal" role="group" aria-label="主要な行動">
            {heroActions.map((action) => (
              <a
                class={'btn btn--' + action.variant}
                href={action.href}
                data-i18n={action.dataKey}
                target={action.external ? '_blank' : undefined}
                rel={action.external ? 'noopener noreferrer' : undefined}
              >
                {action.label}
              </a>
            ))}
          </div>

          <div class="hero__badge-track reveal" role="list" aria-label="主な技術スタック">
            {heroBadges.map((badge) => (
              <span class="badge badge--pill" role="listitem">{badge}</span>
            ))}
          </div>
        </div>

        <aside class="hero__showcase reveal">
          <div class="hero-card__visual-only">
            <img 
              src={import.meta.env.PROD ? './assets/profile.jpg' : joinBase('/assets/profile.jpg')}
              alt="プロフィール画像"
              class="hero-card__main-image"
              loading="eager"
              width="400"
              height="400"
              decoding="async"
            />
          </div>
        </aside>
      </div>
    </div>
  </section>

  <!-- About ------------------------------------------------- -->
  <section id="about" class="section section--layer section-lazy">
    <div class="layout-container">
      <header class="section__header">
        <p class="section__eyebrow" data-i18n="index.about.eyebrow">Who I build for</p>
        <h2 class="section__title" data-i18n="index.about.title">自己紹介</h2>
        <p class="section__lead" data-i18n="index.about.lead">データとクラウドを武器に、課題解決から運用改善、リサーチまで横断的に取り組んでいます。</p>
      </header>
      <div class="about__grid">
        <article class="about-card card reveal">
          <h3 class="about-card__title">現場のDXを前進させる</h3>
          <p class="about-card__body">Komeda Portal では AWS Lambda と LINE API を組み合わせ、シフト調整の24h自動化と属人業務の削減を実現しました。</p>
        </article>
        <article class="about-card card reveal">
          <h3 class="about-card__title">データから意思決定まで</h3>
          <p class="about-card__body">歩行データ研究では特徴量設計から評価指標まで一貫して実装し、実データでの妥当性検証を行っています。</p>
        </article>
        <article class="about-card card reveal">
          <h3 class="about-card__title">継続運用を視野にした実装</h3>
          <p class="about-card__body">モニタリング・アラート・チーム共有まで整備し、リリース後の改善サイクルを前提にしたプロダクト開発を重視しています。</p>
        </article>
      </div>
    </div>
  </section>

  <!-- Featured Projects ------------------------------------ -->
  <section id="projects" class="section section-lazy large" style="position: relative;">
    <!-- より控えめな泡エフェクトをProjectsセクションに -->
    <Bubbles count={12} />
    <div class="layout-container">
      <header class="section__header">
        <p class="section__eyebrow" data-i18n="index.projects.eyebrow">Selected Work</p>
        <h2 class="section__title" data-i18n="index.projects.title">注目プロジェクト</h2>
        <p class="section__lead" data-i18n="index.projects.lead">実務・研究・個人開発から厳選したプロジェクト一覧。</p>
      </header>

      <div class="projects-horizontal-slider" id="projects-slider">
        <div class="projects-horizontal-slider__container">
          <div class="projects-horizontal-slider__track" id="projects-track">
            {(() => {
              // プロジェクトを3個ずつのグループに分割
              const projectsPerSlide = 3;
              const projectGroups = [];
              for (let i = 0; i < allProjects.length; i += projectsPerSlide) {
                projectGroups.push(allProjects.slice(i, i + projectsPerSlide));
              }
              
              return projectGroups.map((group, slideIndex) => (
                <div class="projects-horizontal-slide" data-slide={slideIndex}>
                  <div class="projects-row">
                    {group.map((project) => (
                      <article class="project-row-card card reveal" data-category={project.data.category}>
                        <div class="project-row-card__header">
                          <span class="project-row-card__category">{project.data.category}</span>
                          <h3 class="project-row-card__title">{project.data.title}</h3>
                        </div>
                        
                        <div class="project-row-card__content">
                          <p class="project-row-card__summary">{project.data.summary}</p>
                          
                          <div class="project-row-card__tech">
                            <h4>主要技術</h4>
                            <ul class="project-row-card__tags" role="list">
                              {project.data.technologies.slice(0, 4).map((tech) => (
                                <li class="badge badge--soft" role="listitem">{tech}</li>
                              ))}
                            </ul>
                          </div>
                        </div>

                        <div class="project-row-card__actions">
                          {project.data.links?.demo && (
                            <a class="btn btn--ghost btn--sm" href={project.data.links.demo} target="_blank" rel="noopener noreferrer">Live</a>
                          )}
                          {project.data.links?.repo && (
                            <a class="btn btn--ghost btn--sm" href={project.data.links.repo} target="_blank" rel="noopener noreferrer">Repo</a>
                          )}
                          <a class="btn btn--primary btn--sm" href={joinBase(`/projects/${project.slug}`)}>詳細</a>
                        </div>
                      </article>
                    ))}
                  </div>
                </div>
              ));
            })()}
          </div>
        </div>
        
        {/* スライダーコントロール（3つ以上の場合のみ表示） */}
        {allProjects.length > 3 && (
          <div class="projects-horizontal-slider__controls">
            <button class="projects-horizontal-slider__nav projects-horizontal-slider__nav--prev" id="projects-prev" aria-label="前のスライド">
              <span>‹</span>
            </button>
            <div class="projects-horizontal-slider__indicators" id="projects-indicators">
              {(() => {
                const totalSlides = Math.ceil(allProjects.length / 3);
                return Array.from({ length: totalSlides }, (_, i) => (
                  <button class="projects-horizontal-slider__indicator" data-slide={i} aria-label={`スライド ${i + 1}`}>
                    {i + 1}
                  </button>
                ));
              })()}
            </div>
            <button class="projects-horizontal-slider__nav projects-horizontal-slider__nav--next" id="projects-next" aria-label="次のスライド">
              <span>›</span>
            </button>
          </div>
        )}
      </div>
    </div>
  </section>

  <!-- Research Highlight ----------------------------------- -->
  {researchHighlight && researchSpotlight && (
    <section class="section section--layer">
      <div class="layout-container">
        <header class="section__header">
          <p class="section__eyebrow">Research Highlight</p>
          <h2 class="section__title">{researchHighlight.data.title}</h2>
          <p class="section__lead">{researchHighlight.data.summary}</p>
        </header>
        <article class="research-card card reveal">
          <div class="research-card__media" aria-hidden="true">
            <div class="research-card__diagram">
              <span>{researchSpotlight.mediaLabel}</span>
            </div>
          </div>
          <div class="research-card__body">
            <h3 class="research-card__title">テーマ</h3>
            <p class="research-card__summary">{researchSpotlight.tagline}</p>
            <ul class="research-card__outcomes" role="list">
              {researchSpotlight.outcomes?.map((outcome) => (
                <li role="listitem">{outcome}</li>
              ))}
            </ul>
            <div class="research-card__links">
              <a class="btn btn--ghost" href={projectsHref}>論文・スライド</a>
              <a class="btn btn--ghost" href={projectsHref}>コードベース</a>
            </div>
          </div>
        </article>
      </div>
    </section>
  )}

  <!-- Timeline Preview ------------------------------------- -->
  <section id="experience" class="section section-lazy">
    <div class="layout-container">
      <header class="section__header">
        <p class="section__eyebrow" data-i18n="index.experience.eyebrow">Timeline</p>
        <h2 class="section__title" data-i18n="index.experience.title">歩み</h2>
        <p class="section__lead" data-i18n="index.experience.lead">密な出来事を整理し、成果と学習の文脈が一目でわかるタイムライン。</p>
      </header>
      <div class="timeline-preview">
        {timelinePreview.map((item) => (
          <article class="timeline-preview__item reveal">
            <div class="timeline-preview__period">{item.period}</div>
            <div class="timeline-preview__content">
              <h3>{item.title}</h3>
              <p>{item.summary}</p>
              <div class="timeline-preview__tags">
                {item.tags.map((tag) => (
                  <span class="badge badge--soft">{tag}</span>
                ))}
              </div>
            </div>
          </article>
        ))}
      </div>
      <div class="section__footer">
        <a class="btn btn--primary" href={timelineHref} data-i18n="index.experience.cta">タイムラインを詳しく見る</a>
      </div>
    </div>
  </section>

  <!-- Skills ------------------------------------------------ -->
  {siteConfig.featureFlags.showSkills && (
      <!-- Skills --------------------------------------------- -->
  <section id="skills" class="section section--layer section-lazy">
      <div class="layout-container">
        <header class="section__header">
          <p class="section__eyebrow" data-i18n="index.skills.eyebrow">Skill Radar</p>
          <h2 class="section__title" data-i18n="index.skills.title">スキル</h2>
          <p class="section__lead" data-i18n="index.skills.lead">密度を抑えた3レイヤー構成で、日々の実装・協働・学習のフォーカスを整理しています。</p>
        </header>
        <div class="skills-grid">
          {skillColumns.map((column) => (
            <article class="skills-card card reveal">
              <h3 class="skills-card__title">{column.title}</h3>
              <ul class="skills-card__list" role="list">
                {column.items.map((item) => (
                  <li role="listitem">{item}</li>
                ))}
              </ul>
            </article>
          ))}
        </div>
      </div>
    </section>
  )}

  <!-- Contact ---------------------------------------------- -->
  {siteConfig.featureFlags.showContact && (
    <section id="contact" class="section section-lazy">
      <div class="layout-container">
        <header class="section__header">
          <p class="section__eyebrow" data-i18n="index.contact.eyebrow">Get in touch</p>
          <h2 class="section__title" data-i18n="index.contact.title">お問い合わせ</h2>
          <p class="section__lead" data-i18n="contact.cta.body">お仕事のご相談、技術的な質問、コラボレーションなど、お気軽にどうぞ。</p>
        </header>
        <div class="contact">
          <div class="contact__panel reveal">
            <h3 class="contact__headline">Direct Links</h3>
            <ul class="contact__links" role="list">
              {contactLinks.map((link) => (
                <li role="listitem">
                  <a class="contact__link" href={link.href} target={link.href.startsWith('http') ? '_blank' : undefined} rel={link.href.startsWith('http') ? 'noopener noreferrer' : undefined}>
                    {link.label}
                  </a>
                </li>
              ))}
            </ul>
          </div>

          <form class="contact__form message-form reveal" aria-label="お問い合わせフォーム">
            <div class="form__row">
              <div class="form__field">
                <label class="form__label" for="contact-name">お名前</label>
                <input class="form__input" id="contact-name" name="name" type="text" required aria-describedby="name-error" />
                <span class="form__error" id="name-error" aria-live="polite"></span>
              </div>
              <div class="form__field">
                <label class="form__label" for="contact-email">メールアドレス</label>
                <input class="form__input" id="contact-email" name="email" type="email" required aria-describedby="email-error" />
                <span class="form__error" id="email-error" aria-live="polite"></span>
              </div>
            </div>
            <div class="form__row">
              <div class="form__field">
                <label class="form__label" for="contact-company">組織名</label>
                <input class="form__input" id="contact-company" name="company" type="text" placeholder="任意" />
              </div>
              <div class="form__field">
                <label class="form__label" for="contact-subject">件名</label>
                <select class="form__input" id="contact-subject" name="subject" required aria-describedby="subject-error">
                  <option value="">選択してください</option>
                  <option value="プロジェクト相談">プロジェクト相談</option>
                  <option value="技術的質問">技術的質問</option>
                  <option value="転職・採用">転職・採用について</option>
                  <option value="その他">その他</option>
                </select>
                <span class="form__error" id="subject-error" aria-live="polite"></span>
              </div>
            </div>
            <div class="form__field">
              <label class="form__label" for="contact-message">メッセージ</label>
              <textarea class="form__textarea" id="contact-message" name="message" rows="5" required aria-describedby="message-error" placeholder="ご質問やご相談内容をお聞かせください"></textarea>
              <span class="form__error" id="message-error" aria-live="polite"></span>
            </div>
            <button class="btn btn--primary contact__submit submit-btn" type="submit">送信する</button>
          </form>
        </div>
      </div>
    </section>
  )}
</Base>
