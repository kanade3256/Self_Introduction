---
import Base from '../layouts/Base.astro';

const timelineStats = [
  { value: '3', label: '商用運用プロダクト' },
  { value: '2', label: '研究テーマ' },
  { value: '5', label: '継続発表・登壇' },
  { value: '4+', label: 'チーム開発コラボ' },
];

const timelineGroups = [
  {
    year: '2024',
    subtitle: 'クラウドDXと研究の深化',
    entries: [
      {
        period: '2024.09',
        title: 'ポートフォリオサイト Astro リニューアル',
        kind: 'personal',
        summary: 'Astro + GitHub Pages で高速かつi18n対応のポートフォリオを構築。ダークテーマ／IntersectionObserverによる演出を実装。',
        bullets: ['静的生成とSEO最適化でLighthouse 90+達成', 'GitHub ActionsでCI/CDを自動化', 'モバイル〜デスクトップでのアクセシビリティ改善'],
        tags: ['Astro', 'TypeScript', 'CI/CD'],
      },
      {
        period: '2024.06 - 現在',
        title: '歩行データ時系列クラスタリング研究',
        kind: 'research',
        summary: 'MediaPipeで取得した歩行データをDTWとクラスタリングで分析し、特徴量設計から検証まで一貫して担当。',
        bullets: ['特徴量抽出・正規化パイプラインの構築', 'K-means / 階層クラスタリングの比較評価', '研究発表向けビジュアライゼーションを実装'],
        tags: ['Python', 'Research', 'DTW'],
      },
      {
        period: '2024.03 - 2024.08',
        title: 'Komeda Portal - バイトシフトDXシステム',
        kind: 'development',
        summary: 'AWS Lambda + LINE APIでシフト調整を自動化。9店舗運用とゼロダウンタイムデプロイを実現。',
        bullets: ['Secrets Managerで安全な認証情報管理', '通知・承認フローを自動化し工数23%削減', 'CloudWatchとSlackで運用監視ラインを構築'],
        tags: ['AWS Lambda', 'LINE API', 'Serverless'],
      },
    ],
  },
  {
    year: '2023',
    subtitle: 'フルスタック基盤づくりと学びの強化',
    entries: [
      {
        period: '2023.10 - 2024.02',
        title: '研究室メモ共有アプリ',
        kind: 'development',
        summary: 'Next.js + Firebaseで研究室の知識共有を支えるリアルタイムアプリを開発。認証・RBAC・セキュリティを整備。',
        bullets: ['Google認証とロールベース権限を実装', 'Firestoreでリアルタイム同期と差分更新', '学習ログ可視化でチーム定着率向上'],
        tags: ['Next.js', 'Firebase', 'Realtime'],
      },
      {
        period: '2023.04 - 現在',
        title: 'データサイエンス・機械学習の継続学習',
        kind: 'learning',
        summary: '統計・機械学習・データ可視化まで一貫して学び、研究と実務に適用。',
        bullets: ['PythonエコシステムでETL〜分析を習得', 'scikit-learnで教師あり／なし学習を実装', 'Jupyterで反復的な検証サイクルを構築'],
        tags: ['Python', 'ML', 'Analytics'],
      },
    ],
  },
];

const ongoingFocus = [
  {
    title: '技術キャッチアップ',
    description: 'Serverlessアーキテクチャ、Observability、データ契約などの新潮流を検証し、ナレッジ共有を継続。',
  },
  {
    title: '個人プロジェクト',
    description: '業務課題を抽象化したプロトタイプでユーザー検証を行い、OSSへのコントリビュートも推進。',
  },
  {
    title: 'コミュニティ・発信',
    description: '勉強会・登壇・ブログでの知見共有と、メンタリング活動を通じたアウトプットを継続。',
  },
];
---

<Base title="タイムライン" description="学習・開発・研究・受賞・登壇などの歩みを時系列で紹介">
  <section class="section section--hero timeline-hero">
    <div class="layout-container">
      <header class="section__header">
        <p class="section__eyebrow" data-i18n="timeline.title">タイムライン・実績</p>
        <h1 class="section__title">成果と成長の軌跡</h1>
        <p class="section__lead" data-i18n="timeline.summary">学習・開発・研究・受賞・登壇などの歩みを時系列で紹介します。継続的な成長と挑戦の軌跡をご覧ください。</p>
      </header>
      <div class="timeline-hero__stats">
        {timelineStats.map((stat) => (
          <div class="timeline-hero__stat">
            <span class="timeline-hero__stat-value">{stat.value}</span>
            <span class="timeline-hero__stat-label">{stat.label}</span>
          </div>
        ))}
      </div>
    </div>
  </section>

  <section class="section timeline-section">
    <div class="layout-container">
      {timelineGroups.map((group) => (
        <section class="timeline-group" aria-label={group.year + ' ' + group.subtitle}>
          <header class="timeline-group__header">
            <span class="timeline-group__year">{group.year}</span>
            <p class="timeline-group__subtitle">{group.subtitle}</p>
          </header>

          <div class="timeline-list timeline-list--desktop">
            <ol>
              {group.entries.map((entry) => (
                <li class="timeline-item" data-kind={entry.kind}>
                  <div class="timeline-item__marker" aria-hidden="true"></div>
                  <div class="timeline-item__body">
                    <div class="timeline-item__header">
                      <span class="timeline-item__period">{entry.period}</span>
                      <h3 class="timeline-item__title">{entry.title}</h3>
                    </div>
                    <p class="timeline-item__summary">{entry.summary}</p>
                    <ul class="timeline-item__bullets" role="list">
                      {entry.bullets.map((bullet) => (
                        <li role="listitem">{bullet}</li>
                      ))}
                    </ul>
                    <div class="timeline-item__tags">
                      {entry.tags.map((tag) => (
                        <span class="badge badge--soft">{tag}</span>
                      ))}
                    </div>
                  </div>
                </li>
              ))}
            </ol>
          </div>

          <div class="timeline-accordion timeline-accordion--mobile">
            {group.entries.map((entry) => (
              <details class="timeline-accordion__item" data-kind={entry.kind}>
                <summary>
                  <span class="timeline-accordion__period">{entry.period}</span>
                  <span class="timeline-accordion__title">{entry.title}</span>
                </summary>
                <div class="timeline-accordion__content">
                  <p>{entry.summary}</p>
                  <ul role="list">
                    {entry.bullets.map((bullet) => (
                      <li role="listitem">{bullet}</li>
                    ))}
                  </ul>
                  <div class="timeline-accordion__tags">
                    {entry.tags.map((tag) => (
                      <span class="badge badge--soft">{tag}</span>
                    ))}
                  </div>
                </div>
              </details>
            ))}
          </div>
        </section>
      ))}
    </div>
  </section>

  <section class="section section--layer timeline-ongoing">
    <div class="layout-container">
      <header class="section__header">
        <p class="section__eyebrow" data-i18n="timeline.ongoing.title">継続的な取り組み</p>
        <h2 class="section__title">Focus Now</h2>
      </header>
      <div class="timeline-ongoing__grid">
        {ongoingFocus.map((item) => (
          <article class="timeline-ongoing__item card">
            <h3 class="timeline-ongoing__title">{item.title}</h3>
            <p class="timeline-ongoing__description">{item.description}</p>
          </article>
        ))}
      </div>
    </div>
  </section>
</Base>
