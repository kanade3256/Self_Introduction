---
export interface Props {
  title?: string;
  description?: string;
}

const { title, description } = Astro.props;

import siteConfig from '../data/site.json';

const isDev = import.meta.env.DEV;
const basePath = isDev ? '' : '/SelfIntroduction';
const stylesheetPath = isDev ? '/css/style.css' : basePath + '/css/style.css';
const scriptPath = isDev ? '/js/main.js' : basePath + '/js/main.js';
const iconPath = isDev ? '/assets/favicon.svg' : basePath + '/assets/favicon.svg';
const ogImageUrl = isDev
  ? siteConfig.siteUrl + '/assets/og-image.png'
  : siteConfig.siteUrl + basePath + '/assets/og-image.png';
const siteTitle = title ? title + ' | ' + siteConfig.siteName : siteConfig.siteName;

const normalizePath = (path: string) => {
  if (path.length > 1 && path.endsWith('/')) {
    return path.slice(0, -1);
  }
  return path;
};

const getNavHref = (href: string) => {
  if (href.startsWith('http') || href.startsWith('#')) {
    return href;
  }
  const withLeadingSlash = href.startsWith('/') ? href : '/' + href;
  return isDev ? withLeadingSlash : basePath + withLeadingSlash;
};

const getNavAriaCurrent = (href: string) => {
  if (href.startsWith('http') || href.startsWith('#')) {
    return undefined;
  }
  const currentPath = normalizePath(Astro.url.pathname || '/');
  const targetPath = normalizePath(getNavHref(href));
  return currentPath === targetPath ? 'page' : undefined;
};
---

<!doctype html>
<html lang="ja">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>{siteTitle}</title>
    <meta name="title" content={siteTitle} />
    <meta name="description" content={description || siteConfig.description} />
    <meta name="keywords" content={siteConfig.meta.keywords.join(',')} />
    <meta name="author" content={siteConfig.author} />
    <meta property="og:type" content="website" />
    <meta property="og:url" content={siteConfig.siteUrl} />
    <meta property="og:title" content={siteTitle} />
    <meta property="og:description" content={description || siteConfig.description} />
    <meta property="og:image" content={ogImageUrl} />
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={siteConfig.siteUrl} />
    <meta property="twitter:title" content={siteTitle} />
    <meta property="twitter:description" content={description || siteConfig.description} />
    <meta property="twitter:image" content={ogImageUrl} />
    <script
      type="application/ld+json"
      set:html={JSON.stringify({
        '@context': 'https://schema.org',
        '@type': 'Person',
        name: siteConfig.author,
        jobTitle: 'Full-Stack Engineer & Data Scientist',
        description: siteConfig.description,
        url: siteConfig.siteUrl,
        sameAs: [
          siteConfig.socials.github.url,
          siteConfig.socials.qiita.url,
        ],
        knowsAbout: [
          'Python',
          'JavaScript',
          'TypeScript',
          'React',
          'Next.js',
          'AWS',
          'Firebase',
          'Data Science',
          'Machine Learning',
        ],
      })}
    />
    <meta name="theme-color" content={siteConfig.meta.themeColor} id="meta-theme-color" />
    <link rel="icon" href={iconPath} type="image/svg+xml" />
    <link rel="preload" href={stylesheetPath} as="style" />
    <link rel="stylesheet" href={stylesheetPath} />
  </head>
  <body>
    <a class="skip-link" href="#content">メインコンテンツへ移動</a>

    <header class="site-header" role="banner">
      <div class="layout-container site-header__inner">
        <a class="site-header__brand" href={getNavHref('#home')} aria-label="ホーム">
          <span class="site-header__brand-mark" aria-hidden="true">{siteConfig.author.slice(0, 1)}</span>
          <span class="site-header__brand-label">{siteConfig.author}</span>
        </a>
        <button
          id="menu-toggle"
          class="site-header__toggle nav-toggle"
          type="button"
          aria-expanded="false"
          aria-controls="site-nav"
          aria-label="メニューを開閉"
        >
          <span class="site-header__toggle-bar" aria-hidden="true"></span>
          <span class="site-header__toggle-bar" aria-hidden="true"></span>
          <span class="site-header__toggle-bar" aria-hidden="true"></span>
        </button>
        <nav
          id="site-nav"
          class="site-header__nav site-nav"
          role="navigation"
          aria-label="メインナビゲーション"
        >
          <ul class="site-header__menu">
            {siteConfig.nav.map((item) => {
              const href = getNavHref(item.href);
              return (
                <li class="site-header__menu-item">
                  <a
                    class="site-header__link"
                    href={href}
                    data-i18n={item.key}
                    target={item.external ? '_blank' : undefined}
                    rel={item.external ? 'noopener noreferrer' : undefined}
                    aria-label={item.external ? item.label + 'を開く' : undefined}
                    aria-current={getNavAriaCurrent(item.href)}
                  >
                    {item.label}
                  </a>
                </li>
              );
            })}
          </ul>
          {siteConfig.featureFlags.enableI18n && (
            <div class="site-header__controls">
              <button id="lang-toggle" class="site-header__control" type="button" aria-label="言語を切り替える">
                <span aria-hidden="true">🌐</span>
                <span class="site-header__control-label">EN</span>
              </button>
              <button id="theme-toggle" class="site-header__control" type="button" aria-label="テーマを切り替える">
                <span aria-hidden="true">🌓</span>
                <span class="site-header__control-label">Theme</span>
              </button>
            </div>
          )}
        </nav>
      </div>
    </header>

    <div class="layout__sentinel" aria-hidden="true"></div>

    <main id="content" class="site-main" role="main">
      <slot />
    </main>

    <footer class="site-footer" role="contentinfo">
      <div class="layout-container site-footer__inner">
        <div class="site-footer__brand">
          <span class="site-footer__brand-name">{siteConfig.author}</span>
          <p class="site-footer__description">{siteConfig.description}</p>
        </div>
        <div class="site-footer__cta">
          <h2 class="site-footer__title" data-i18n="contact.cta.title">お気軽にお問い合わせください</h2>
          <p class="site-footer__text" data-i18n="contact.cta.body">
            お仕事のご相談、技術的な質問、コラボレーションなど、どんなことでもお気軽にご連絡ください。
          </p>
          <div class="site-footer__links">
            {Object.entries(siteConfig.socials).map(([key, social]) => (
              <a
                key={key}
                class="site-footer__link"
                href={social.url}
                target="_blank"
                rel="noopener noreferrer"
              >
                {social.label}
              </a>
            ))}
          </div>
        </div>
      </div>
      <div class="site-footer__bottom">
        <div class="layout-container site-footer__bottom-inner">
          <p class="site-footer__copyright">
            &copy; <span id="year">{new Date().getFullYear()}</span> {siteConfig.author}
          </p>
          {siteConfig.featureFlags.enableI18n && (
            <p class="site-footer__note">
              <small>{siteConfig.editingTips.ja}</small>
            </p>
          )}
        </div>
      </div>
    </footer>

    <script is:inline>
      window.ENV = { isDev: typeof window !== 'undefined' && window.location.hostname === 'localhost' };
    </script>
    <script src={scriptPath}></script>
  </body>
</html>
