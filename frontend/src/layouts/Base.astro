---
export interface Props {
  title?: string;
  description?: string;
  canonicalURL?: string;
  structuredData?: any;
}

const { title, description, canonicalURL, structuredData } = Astro.props;

// Áí∞Â¢É„Å´Âøú„Åò„Å¶Ë®≠ÂÆö„Éï„Ç°„Ç§„É´„ÇíÈÅ∏Êäû
const isProduction = import.meta.env.PROD;
const isGitHubPages = import.meta.env.GITHUB_PAGES === 'true' || import.meta.env.DEPLOY_TARGET === 'github-pages';

let siteConfig;
if (isGitHubPages) {
  // GitHub PagesÁî®„ÅÆË®≠ÂÆö
  siteConfig = await import('../data/site.json').then(m => m.default);
} else if (isProduction) {
  // „Åù„ÅÆ‰ªñ„ÅÆÊú¨Áï™Áí∞Â¢ÉÁî®„ÅÆË®≠ÂÆö
  try {
    siteConfig = await import('../data/site.prod.json').then(m => m.default);
  } catch {
    // „Éï„Ç©„Éº„É´„Éê„ÉÉ„ÇØ
    siteConfig = await import('../data/site.json').then(m => m.default);
  }
} else {
  // ÈñãÁô∫Áí∞Â¢ÉÁî®„ÅÆË®≠ÂÆö
  siteConfig = await import('../data/site.json').then(m => m.default);
}

const basePath = (import.meta.env.BASE_URL ?? '/').replace(/\/$/, '');
const joinBase = (path: string) => {
  const normalized = path.startsWith('/') ? path : '/' + path;
  // Êú¨Áï™Áí∞Â¢É„Åß„ÅØÁõ∏ÂØæ„Éë„Çπ„ÇíÂº∑Âà∂‰ΩøÁî®
  if (import.meta.env.PROD) {
    return '.' + normalized;
  }
  return basePath ? basePath + normalized : normalized;
};

const stylesheetPath = joinBase('/css/style.css');
const scriptPath = joinBase('/js/main.js');
// „Éó„É≠„Éï„Ç£„Éº„É´ÁîªÂÉè„ÅÆ„Éë„Çπ„Çí‰øÆÊ≠£ - Êú¨Áï™ÊôÇ„ÅØÁõ∏ÂØæ„Éë„Çπ„ÄÅÈñãÁô∫ÊôÇ„ÅØ„Éô„Éº„Çπ„Éë„ÇπÂê´„ÇÄ
const iconPath = import.meta.env.PROD ? './assets/profile.jpg' : joinBase('/assets/profile.jpg');
const ogImageUrl = new URL('assets/og-image.png', siteConfig.siteUrl).toString();
const siteTitle = title ? title + ' | ' + siteConfig.siteName : siteConfig.siteName;

const normalizePath = (path: string) => {
  if (path.length > 1 && path.endsWith('/')) {
    return path.slice(0, -1);
  }
  return path;
};

const getNavHref = (href: string) => {
  if (href.startsWith('http') || href.startsWith('#')) {
    return href;
  }
  const normalized = href.startsWith('/') ? href : '/' + href;
  return joinBase(normalized);
};

const getNavAriaCurrent = (href: string) => {
  if (href.startsWith('http') || href.startsWith('#')) {
    return undefined;
  }
  const currentPath = normalizePath(Astro.url.pathname || '/');
  const targetPath = normalizePath(getNavHref(href));
  return currentPath === targetPath ? 'page' : undefined;
};
---

<!doctype html>
<html lang="ja">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>{siteTitle}</title>
    <meta name="title" content={siteTitle} />
    <meta name="description" content={description || siteConfig.description} />
    <meta name="keywords" content={siteConfig.meta.keywords.join(',')} />
    <meta name="author" content={siteConfig.author} />
    <meta property="og:type" content="website" />
    <meta property="og:url" content={siteConfig.siteUrl} />
    <meta property="og:title" content={siteTitle} />
    <meta property="og:description" content={description || siteConfig.description} />
    <meta property="og:image" content={ogImageUrl} />
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={siteConfig.siteUrl} />
    <meta property="twitter:title" content={siteTitle} />
    <meta property="twitter:description" content={description || siteConfig.description} />
    <meta property="twitter:image" content={ogImageUrl} />
    
    <!-- Canonical URL -->
    {canonicalURL && <link rel="canonical" href={canonicalURL} />}
    
    <!-- Structured Data -->
    {structuredData && (
      <script type="application/ld+json" set:html={JSON.stringify(structuredData)} />
    )}
    
    <script
      type="application/ld+json"
      set:html={JSON.stringify({
        '@context': 'https://schema.org',
        '@type': 'Person',
        name: siteConfig.author,
        jobTitle: 'Full-Stack Engineer & Data Scientist',
        description: siteConfig.description,
        url: siteConfig.siteUrl,
        sameAs: [
          siteConfig.socials.github.url,
          siteConfig.socials.qiita.url,
        ],
        knowsAbout: [
          'Python',
          'JavaScript',
          'TypeScript',
          'React',
          'Next.js',
          'AWS',
          'Firebase',
          'Data Science',
          'Machine Learning',
        ],
      })}
    />
    <meta name="theme-color" content={siteConfig.meta.themeColor} id="meta-theme-color" />
    <link rel="icon" href={iconPath} type="image/jpeg" />
    <link rel="preload" href={stylesheetPath} as="style" />
    <link rel="stylesheet" href={stylesheetPath} />
    
    <!-- HeroÁîªÂÉè„Éó„É™„É≠„Éº„ÉâÔºàFirst PaintÈ´òÈÄüÂåñÔºâ -->
    <link rel="preload" as="image" href={joinBase('/assets/profile.jpg')} />
    
    <!-- „Éï„Ç©„É≥„ÉàÊúÄÈÅ©ÂåñÔºöGoogle Fonts preconnect -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
  </head>
  <body>
    <a class="skip-link" href="#content">„É°„Ç§„É≥„Ç≥„É≥„ÉÜ„É≥„ÉÑ„Å∏ÁßªÂãï</a>

    <!-- ‚úÖ ‰∏ÄÂ∫¶„Å†„ÅëË™≠„ÅøËæº„ÇÄÊ∞¥Èù¢„ÅÆÊè∫„Çâ„ÇÅ„Åç„Éï„Ç£„É´„Çø -->
    <svg width="0" height="0" aria-hidden="true" style="position:absolute">
      <filter id="water-caustics-filter">
        <!-- Ê≥¢Áä∂„Éé„Ç§„Ç∫ÔºàÊôÇÈñì„ÅßÂ§âÂåñÔºâ -->
        <feTurbulence type="fractalNoise" baseFrequency="0.01 0.015" numOctaves="2" seed="3" result="noise">
          <animate attributeName="baseFrequency" dur="12s" values="0.010 0.013;0.009 0.017;0.010 0.015" repeatCount="indefinite"/>
        </feTurbulence>
        <!-- Â±àÊäò„Å£„ÅΩ„ÅÑ„ÇÜ„Åå„Åø -->
        <feDisplacementMap in="SourceGraphic" in2="noise" scale="24" xChannelSelector="R" yChannelSelector="G"/>
      </filter>
    </svg>

    <!-- ‚úÖ ‰∏äÈÉ®„Å´„Å†„ÅëÂäπ„Åã„Åõ„Çã„Ç™„Éº„Éê„Éº„É¨„Ç§„ÄÇËÉåÊôØ„ÅÆ‰∏ä„Éª„Ç≥„É≥„ÉÜ„É≥„ÉÑ„ÅÆ‰∏ã„Å´ÈÖçÁΩÆ -->
    <div class="ocean-overlay" aria-hidden="true">
      <svg width="100%" height="100%" preserveAspectRatio="none" class="ocean-overlay__svg">
        <defs>
          <!-- „Åç„Çâ„ÇÅ„ÅçÁî®„ÅÆÁ≤í„Éë„Çø„Éº„É≥ÔºàË¶ñË¶öÂäπÊûú„ÇíÂº∑ÂåñÔºâ -->
          <pattern id="ripples" x="0" y="0" width=".12" height=".12" patternUnits="objectBoundingBox">
            <circle cx="0.1" cy="0.1" r="0.08" fill="rgba(255,255,255,0.65)" />
            <circle cx="0.5" cy="0.2" r="0.06" fill="rgba(255,255,255,0.45)" />
            <circle cx="0.8" cy="0.6" r="0.05" fill="rgba(255,255,255,0.35)" />
            <circle cx="0.3" cy="0.7" r="0.04" fill="rgba(255,255,255,0.25)" />
            <circle cx="0.7" cy="0.4" r="0.07" fill="rgba(255,255,255,0.55)" />
          </pattern>
        </defs>
        <rect x="0" y="0" width="100%" height="100%" fill="url(#ripples)"/>
      </svg>
    </div>

    <header class="site-header" role="banner">
      <div class="layout-container site-header__inner">
        <a class="site-header__brand" href={getNavHref('#home')} aria-label="„Éõ„Éº„É†">
          <span class="site-header__brand-mark">
            <img src={iconPath} alt={siteConfig.author + "„ÅÆ„Ç¢„Ç§„Ç≥„É≥"} width="42" height="42" loading="lazy" decoding="async" />
          </span>
          <span class="site-header__brand-label">{siteConfig.author}</span>
        </a>
        <button
          id="menu-toggle"
          class="site-header__toggle nav-toggle"
          type="button"
          aria-expanded="false"
          aria-controls="site-nav"
          aria-label="„É°„Éã„É•„Éº„ÇíÈñãÈñâ"
        >
          <span class="site-header__toggle-bar" aria-hidden="true"></span>
          <span class="site-header__toggle-bar" aria-hidden="true"></span>
          <span class="site-header__toggle-bar" aria-hidden="true"></span>
        </button>
        <nav
          id="site-nav"
          class="site-header__nav site-nav"
          role="navigation"
          aria-label="„É°„Ç§„É≥„Éä„Éì„Ç≤„Éº„Ç∑„Éß„É≥"
        >
          <ul class="site-header__menu">
            {siteConfig.nav.map((item) => {
              const href = getNavHref(item.href);
              return (
                <li class="site-header__menu-item">
                  <a
                    class="site-header__link"
                    href={href}
                    data-i18n={item.key}
                    target={item.external ? '_blank' : undefined}
                    rel={item.external ? 'noopener noreferrer' : undefined}
                    aria-label={item.external ? item.label + '„ÇíÈñã„Åè' : undefined}
                    aria-current={getNavAriaCurrent(item.href)}
                  >
                    {item.label}
                  </a>
                </li>
              );
            })}
          </ul>
          {siteConfig.featureFlags.enableI18n && (
            <div class="site-header__controls">
              <button id="lang-toggle" class="site-header__control" type="button" aria-label="Ë®ÄË™û„ÇíÂàá„ÇäÊõø„Åà„Çã">
                <span aria-hidden="true">üåê</span>
                <span class="site-header__control-label">EN</span>
              </button>
            </div>
          )}
        </nav>
      </div>
    </header>

    <div class="layout__sentinel" aria-hidden="true"></div>

    <!-- ‚úÖ „Çπ„ÇØ„É≠„Éº„É´Ê∑±Â∫¶„É¨„Ç§„É§„ÉºÔºàÊú¨Êñá„Çà„ÇäÊâãÂâç„Å´Â∏∏ÈßêÔºâ -->
    <div class="depth-layer" aria-hidden="true">
      <div class="depth-layer__light"></div>
    </div>

    <main id="content" class="site-main" role="main">
      <slot />
    </main>

    <footer class="site-footer" role="contentinfo">
      <div class="layout-container site-footer__inner">
        <div class="site-footer__brand">
          <span class="site-footer__brand-name">{siteConfig.author}</span>
          <p class="site-footer__description">{siteConfig.description}</p>
        </div>
        <div class="site-footer__cta">
          <h2 class="site-footer__title" data-i18n="contact.cta.title">„ÅäÊ∞óËªΩ„Å´„ÅäÂïè„ÅÑÂêà„Çè„Åõ„Åè„Å†„Åï„ÅÑ</h2>
          <p class="site-footer__text" data-i18n="contact.cta.body">
            „Åä‰ªï‰∫ã„ÅÆ„ÅîÁõ∏Ë´á„ÄÅÊäÄË°ìÁöÑ„Å™Ë≥™Âïè„ÄÅ„Ç≥„É©„Éú„É¨„Éº„Ç∑„Éß„É≥„Å™„Å©„ÄÅ„Å©„Çì„Å™„Åì„Å®„Åß„ÇÇ„ÅäÊ∞óËªΩ„Å´„ÅîÈÄ£Áµ°„Åè„Å†„Åï„ÅÑ„ÄÇ
          </p>
          <div class="site-footer__links">
            {Object.entries(siteConfig.socials).map(([key, social]) => (
              <a
                key={key}
                class="site-footer__link"
                href={social.url}
                target="_blank"
                rel="noopener noreferrer"
              >
                {social.label}
              </a>
            ))}
          </div>
        </div>
      </div>
      <div class="site-footer__bottom">
        <div class="layout-container site-footer__bottom-inner">
          <p class="site-footer__copyright">
            &copy; <span id="year">{new Date().getFullYear()}</span> {siteConfig.author}
          </p>
          {siteConfig.featureFlags.enableI18n && (
            <p class="site-footer__note">
              <small>{siteConfig.editingTips.ja}</small>
            </p>
          )}
        </div>
      </div>
    </footer>

    <!-- ‚úÖ reduced-motion „ÇíÂ∞äÈáç„Åó„Å¶ÂÖâÈáè„Çí‰∏ã„Åí„Çã -->
    <script is:inline>
      const mql = window.matchMedia('(prefers-reduced-motion: reduce)');
      const el = document.querySelector('.ocean-overlay');
      if (mql.matches && el) el.style.opacity = '0.35';
    </script>

    <script is:inline>
      window.ENV = { isDev: typeof window !== 'undefined' && window.location.hostname === 'localhost' };
    </script>
    <script is:inline define:vars={{ scriptSrc: joinBase('/js/main.js') }}>
      const script = document.createElement('script');
      script.src = scriptSrc;
      script.defer = true;
      document.head.appendChild(script);
    </script>
  </body>
</html>
